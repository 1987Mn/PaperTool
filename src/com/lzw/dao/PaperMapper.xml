<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzw.dao.PaperMapper" >
  <resultMap id="BaseResultMap" type="com.lzw.domain.Paper" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="courseNum" property="coursenum" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="classAMajor" property="classamajor" jdbcType="VARCHAR" />
    <result column="testNum" property="testnum" jdbcType="CHAR" />
    <result column="testTime" property="testtime" jdbcType="TIMESTAMP" />
    <result column="testWay" property="testway" jdbcType="CHAR" />
    <result column="questionNum" property="questionnum" jdbcType="INTEGER" />
    <result column="smallQuestionNum" property="smallquestionnum" jdbcType="INTEGER" />
    <result column="totalPoints" property="totalpoints" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, course, courseNum, college, teacher, classAMajor, testNum, testTime, testWay, 
    questionNum, smallQuestionNum, totalPoints
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lzw.domain.PaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzw.domain.PaperExample" >
    delete from t_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzw.domain.Paper" >
    insert into t_paper (id, title, course, 
      courseNum, college, teacher, 
      classAMajor, testNum, testTime, 
      testWay, questionNum, smallQuestionNum, 
      totalPoints)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{course,jdbcType=VARCHAR}, 
      #{coursenum,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, 
      #{classamajor,jdbcType=VARCHAR}, #{testnum,jdbcType=CHAR}, #{testtime,jdbcType=TIMESTAMP}, 
      #{testway,jdbcType=CHAR}, #{questionnum,jdbcType=INTEGER}, #{smallquestionnum,jdbcType=INTEGER}, 
      #{totalpoints,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.lzw.domain.Paper" >
    insert into t_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="coursenum != null" >
        courseNum,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="classamajor != null" >
        classAMajor,
      </if>
      <if test="testnum != null" >
        testNum,
      </if>
      <if test="testtime != null" >
        testTime,
      </if>
      <if test="testway != null" >
        testWay,
      </if>
      <if test="questionnum != null" >
        questionNum,
      </if>
      <if test="smallquestionnum != null" >
        smallQuestionNum,
      </if>
      <if test="totalpoints != null" >
        totalPoints,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="coursenum != null" >
        #{coursenum,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="classamajor != null" >
        #{classamajor,jdbcType=VARCHAR},
      </if>
      <if test="testnum != null" >
        #{testnum,jdbcType=CHAR},
      </if>
      <if test="testtime != null" >
        #{testtime,jdbcType=TIMESTAMP},
      </if>
      <if test="testway != null" >
        #{testway,jdbcType=CHAR},
      </if>
      <if test="questionnum != null" >
        #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="smallquestionnum != null" >
        #{smallquestionnum,jdbcType=INTEGER},
      </if>
      <if test="totalpoints != null" >
        #{totalpoints,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzw.domain.PaperExample" resultType="java.lang.Integer" >
    select count(*) from t_paper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_paper
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null" >
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.coursenum != null" >
        courseNum = #{record.coursenum,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null" >
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.classamajor != null" >
        classAMajor = #{record.classamajor,jdbcType=VARCHAR},
      </if>
      <if test="record.testnum != null" >
        testNum = #{record.testnum,jdbcType=CHAR},
      </if>
      <if test="record.testtime != null" >
        testTime = #{record.testtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.testway != null" >
        testWay = #{record.testway,jdbcType=CHAR},
      </if>
      <if test="record.questionnum != null" >
        questionNum = #{record.questionnum,jdbcType=INTEGER},
      </if>
      <if test="record.smallquestionnum != null" >
        smallQuestionNum = #{record.smallquestionnum,jdbcType=INTEGER},
      </if>
      <if test="record.totalpoints != null" >
        totalPoints = #{record.totalpoints,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_paper
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      course = #{record.course,jdbcType=VARCHAR},
      courseNum = #{record.coursenum,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      classAMajor = #{record.classamajor,jdbcType=VARCHAR},
      testNum = #{record.testnum,jdbcType=CHAR},
      testTime = #{record.testtime,jdbcType=TIMESTAMP},
      testWay = #{record.testway,jdbcType=CHAR},
      questionNum = #{record.questionnum,jdbcType=INTEGER},
      smallQuestionNum = #{record.smallquestionnum,jdbcType=INTEGER},
      totalPoints = #{record.totalpoints,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzw.domain.Paper" >
    update t_paper
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="coursenum != null" >
        courseNum = #{coursenum,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="classamajor != null" >
        classAMajor = #{classamajor,jdbcType=VARCHAR},
      </if>
      <if test="testnum != null" >
        testNum = #{testnum,jdbcType=CHAR},
      </if>
      <if test="testtime != null" >
        testTime = #{testtime,jdbcType=TIMESTAMP},
      </if>
      <if test="testway != null" >
        testWay = #{testway,jdbcType=CHAR},
      </if>
      <if test="questionnum != null" >
        questionNum = #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="smallquestionnum != null" >
        smallQuestionNum = #{smallquestionnum,jdbcType=INTEGER},
      </if>
      <if test="totalpoints != null" >
        totalPoints = #{totalpoints,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzw.domain.Paper" >
    update t_paper
    set title = #{title,jdbcType=VARCHAR},
      course = #{course,jdbcType=VARCHAR},
      courseNum = #{coursenum,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      classAMajor = #{classamajor,jdbcType=VARCHAR},
      testNum = #{testnum,jdbcType=CHAR},
      testTime = #{testtime,jdbcType=TIMESTAMP},
      testWay = #{testway,jdbcType=CHAR},
      questionNum = #{questionnum,jdbcType=INTEGER},
      smallQuestionNum = #{smallquestionnum,jdbcType=INTEGER},
      totalPoints = #{totalpoints,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>